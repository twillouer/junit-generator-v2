## Output Pattern definition file.
##
## Available variables:
##      $SOURCEPATH$ - location where source code for current project resides
##      $PACKAGE$ - package path where TestedClass resides
##      $FILENAME$ - Filename of the testClass. Note: if you modify filename only
##      the file name will be affected not a class name
##
## Anything before $SOURCEPATH$ will be ignored. If you need to go outside of the
## sourcepath use $SOURCEPATH$/../
##
## For project sepcific configuration you can add seporate line for every project.
## Earch line must start with project name. i.e
## junitgen=$SOURCEPATH$/testing/$PACKAGE$/$FILENAME$
## If project specific configuration does not exist, the following line will be used.
output=$SOURCEPATH$/test/$PACKAGE$/$FILENAME$


## Property;
## generateForOverloadedMethods
##
## Values:
## (true | false)
##
## Function:
## If this property is set to true then each overloaded version of a method will have it's own
## test created in the resulting JUnit test. If the value is false then only one test method
## will be created for all overloaded versions of a method. If not provided defaults to true.
generateForOverloadedMethods=true

## Property;
## listOverloadedMethodsBy
##
## Values:
## (paramClass | paramName | number)
##
## Function:
## If this property is set to number then when overloaded versions of methods are created
## they will be created each with a different number attached to the name. If this property is
## set to paramClass then each overloaded version of a method will have the Class Names of all
## its parameters attached to its test name. If this property is set to paramName then the names
## of all of it's parameter variables are attached to the name of the test method generated for
## it. If not provided defaults to paramName
listOverloadedMethodsBy=paramName

## Property;
## combineGetterAndSetter
##
## Values:
## (true | false)
##
## Function:
## If this property is set to true then getters and setters will be combined to one method name when
## tests are generaged: 'GetSet<Object>' if false a test is generated for both getter and setter, this
## defaults to false if not provided
combineGetterAndSetter=false

